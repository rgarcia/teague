/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedPostsImport } from './routes/_authed/posts'
import { Route as AuthedChatImport } from './routes/_authed/_chat'
import { Route as AuthedPostsIndexImport } from './routes/_authed/posts.index'
import { Route as AuthedProfileSplatImport } from './routes/_authed/profile.$'
import { Route as AuthedPostsPostIdImport } from './routes/_authed/posts.$postId'
import { Route as AuthedChatChatIndexImport } from './routes/_authed/_chat/chat.index'
import { Route as AuthedChatChatIdImport } from './routes/_authed/_chat/chat.$id'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedPostsRoute = AuthedPostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedChatRoute = AuthedChatImport.update({
  id: '/_chat',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedPostsIndexRoute = AuthedPostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedPostsRoute,
} as any)

const AuthedProfileSplatRoute = AuthedProfileSplatImport.update({
  id: '/profile/$',
  path: '/profile/$',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedPostsPostIdRoute = AuthedPostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => AuthedPostsRoute,
} as any)

const AuthedChatChatIndexRoute = AuthedChatChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AuthedChatRoute,
} as any)

const AuthedChatChatIdRoute = AuthedChatChatIdImport.update({
  id: '/chat/$id',
  path: '/chat/$id',
  getParentRoute: () => AuthedChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authed/_chat': {
      id: '/_authed/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedChatImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/posts': {
      id: '/_authed/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthedPostsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/posts/$postId': {
      id: '/_authed/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof AuthedPostsPostIdImport
      parentRoute: typeof AuthedPostsImport
    }
    '/_authed/profile/$': {
      id: '/_authed/profile/$'
      path: '/profile/$'
      fullPath: '/profile/$'
      preLoaderRoute: typeof AuthedProfileSplatImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/posts/': {
      id: '/_authed/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof AuthedPostsIndexImport
      parentRoute: typeof AuthedPostsImport
    }
    '/_authed/_chat/chat/$id': {
      id: '/_authed/_chat/chat/$id'
      path: '/chat/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof AuthedChatChatIdImport
      parentRoute: typeof AuthedChatImport
    }
    '/_authed/_chat/chat/': {
      id: '/_authed/_chat/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthedChatChatIndexImport
      parentRoute: typeof AuthedChatImport
    }
  }
}

// Create and export the route tree

interface AuthedChatRouteChildren {
  AuthedChatChatIdRoute: typeof AuthedChatChatIdRoute
  AuthedChatChatIndexRoute: typeof AuthedChatChatIndexRoute
}

const AuthedChatRouteChildren: AuthedChatRouteChildren = {
  AuthedChatChatIdRoute: AuthedChatChatIdRoute,
  AuthedChatChatIndexRoute: AuthedChatChatIndexRoute,
}

const AuthedChatRouteWithChildren = AuthedChatRoute._addFileChildren(
  AuthedChatRouteChildren,
)

interface AuthedPostsRouteChildren {
  AuthedPostsPostIdRoute: typeof AuthedPostsPostIdRoute
  AuthedPostsIndexRoute: typeof AuthedPostsIndexRoute
}

const AuthedPostsRouteChildren: AuthedPostsRouteChildren = {
  AuthedPostsPostIdRoute: AuthedPostsPostIdRoute,
  AuthedPostsIndexRoute: AuthedPostsIndexRoute,
}

const AuthedPostsRouteWithChildren = AuthedPostsRoute._addFileChildren(
  AuthedPostsRouteChildren,
)

interface AuthedRouteChildren {
  AuthedChatRoute: typeof AuthedChatRouteWithChildren
  AuthedPostsRoute: typeof AuthedPostsRouteWithChildren
  AuthedProfileSplatRoute: typeof AuthedProfileSplatRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedChatRoute: AuthedChatRouteWithChildren,
  AuthedPostsRoute: AuthedPostsRouteWithChildren,
  AuthedProfileSplatRoute: AuthedProfileSplatRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedChatRouteWithChildren
  '/login': typeof LoginRoute
  '/posts': typeof AuthedPostsRouteWithChildren
  '/posts/$postId': typeof AuthedPostsPostIdRoute
  '/profile/$': typeof AuthedProfileSplatRoute
  '/posts/': typeof AuthedPostsIndexRoute
  '/chat/$id': typeof AuthedChatChatIdRoute
  '/chat': typeof AuthedChatChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedChatRouteWithChildren
  '/login': typeof LoginRoute
  '/posts/$postId': typeof AuthedPostsPostIdRoute
  '/profile/$': typeof AuthedProfileSplatRoute
  '/posts': typeof AuthedPostsIndexRoute
  '/chat/$id': typeof AuthedChatChatIdRoute
  '/chat': typeof AuthedChatChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authed/_chat': typeof AuthedChatRouteWithChildren
  '/_authed/posts': typeof AuthedPostsRouteWithChildren
  '/_authed/posts/$postId': typeof AuthedPostsPostIdRoute
  '/_authed/profile/$': typeof AuthedProfileSplatRoute
  '/_authed/posts/': typeof AuthedPostsIndexRoute
  '/_authed/_chat/chat/$id': typeof AuthedChatChatIdRoute
  '/_authed/_chat/chat/': typeof AuthedChatChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/posts'
    | '/posts/$postId'
    | '/profile/$'
    | '/posts/'
    | '/chat/$id'
    | '/chat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/posts/$postId'
    | '/profile/$'
    | '/posts'
    | '/chat/$id'
    | '/chat'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/login'
    | '/_authed/_chat'
    | '/_authed/posts'
    | '/_authed/posts/$postId'
    | '/_authed/profile/$'
    | '/_authed/posts/'
    | '/_authed/_chat/chat/$id'
    | '/_authed/_chat/chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/_chat",
        "/_authed/posts",
        "/_authed/profile/$"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authed/_chat": {
      "filePath": "_authed/_chat.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/_chat/chat/$id",
        "/_authed/_chat/chat/"
      ]
    },
    "/_authed/posts": {
      "filePath": "_authed/posts.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/posts/$postId",
        "/_authed/posts/"
      ]
    },
    "/_authed/posts/$postId": {
      "filePath": "_authed/posts.$postId.tsx",
      "parent": "/_authed/posts"
    },
    "/_authed/profile/$": {
      "filePath": "_authed/profile.$.tsx",
      "parent": "/_authed"
    },
    "/_authed/posts/": {
      "filePath": "_authed/posts.index.tsx",
      "parent": "/_authed/posts"
    },
    "/_authed/_chat/chat/$id": {
      "filePath": "_authed/_chat/chat.$id.tsx",
      "parent": "/_authed/_chat"
    },
    "/_authed/_chat/chat/": {
      "filePath": "_authed/_chat/chat.index.tsx",
      "parent": "/_authed/_chat"
    }
  }
}
ROUTE_MANIFEST_END */
