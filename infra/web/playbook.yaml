---
- name: apps/web server deployment
  hosts: all
  become: true
  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - ufw
          - unzip
          - git
        state: present
        update_cache: true

    - name: Allow HTTP traffic
      ufw:
        rule: allow
        port: "80"
        proto: tcp

    - name: Install Bun
      shell: curl -fsSL https://bun.sh/install | bash -s "bun-v1.2.1"
      args:
        creates: /root/.bun/bin/bun

    - name: Add Bun to PATH
      lineinfile:
        path: /root/.bashrc
        line: 'export BUN_INSTALL="/root/.bun" && export PATH="$BUN_INSTALL/bin:$PATH"'
        state: present

    - name: Clone the code
      git:
        repo: https://github.com/rgarcia/teague.git
        dest: /root/cannon
        version: main
        clone: yes
        update: yes
      register: git_status

    - name: Install dependencies and build
      shell: |
        export BUN_INSTALL="/root/.bun"
        export PATH="$BUN_INSTALL/bin:$PATH"
        cd /root/cannon/apps/web
        bun install
        bun run build
      args:
        executable: /bin/bash
      when: git_status.changed
      notify: restart cannon service

    - name: Create systemd service file
      copy:
        dest: /etc/systemd/system/cannon.service
        content: |
          [Unit]
          Description=Cannon Web Service
          After=network.target

          [Service]
          Type=simple
          User=root
          WorkingDirectory=/root/cannon/apps/web
          Environment=DEPLOY_ENV={{ deploy_env }}
          Environment=CLOUD_PROVIDER={{ cloud_provider }}
          Environment=CLOUD_REGION={{ cloud_region }}
          Environment=VITE_CLERK_PUBLISHABLE_KEY={{ clerk_publishable_key }}
          Environment=CLERK_PUBLISHABLE_KEY={{ clerk_publishable_key }}
          Environment=CLERK_SECRET_KEY={{ clerk_secret_key }}
          Environment=PORT=80
          ExecStart=/root/.bun/bin/bun run .output/server/index.mjs
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: "0644"
      notify: restart cannon service

    - name: Enable and start cannon service
      systemd:
        name: cannon
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: restart cannon service
      systemd:
        name: cannon
        state: restarted
